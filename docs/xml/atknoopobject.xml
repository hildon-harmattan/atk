<refentry id="AtkNoOpObject">
<refmeta>
<refentrytitle role="top_of_page" id="AtkNoOpObject.top_of_page">AtkNoOpObject</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>ATK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AtkNoOpObject</refname>
<refpurpose>An AtkObject which purports to implement all ATK interfaces.</refpurpose>
</refnamediv>

<refsynopsisdiv id="AtkNoOpObject.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="AtkNoOpObject-struct">AtkNoOpObject</link>;
<link linkend="AtkObject">AtkObject</link> *         <link linkend="atk-no-op-object-new">atk_no_op_object_new</link>                (<link linkend="GObject">GObject</link> *obj);
</synopsis>
</refsynopsisdiv>

<refsect1 id="AtkNoOpObject.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="AtkObject">AtkObject</link>
         +----AtkNoOpObject
</synopsis>
</refsect1>



<refsect1 id="AtkNoOpObject.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
AtkNoOpObject implements
 <link linkend="AtkImage">AtkImage</link>,  <link linkend="AtkAction">AtkAction</link>,  <link linkend="AtkComponent">AtkComponent</link>,  <link linkend="AtkDocument">AtkDocument</link>,  <link linkend="AtkEditableText">AtkEditableText</link>,  <link linkend="AtkHypertext">AtkHypertext</link>,  <link linkend="AtkSelection">AtkSelection</link>,  <link linkend="AtkTable">AtkTable</link>,  <link linkend="AtkText">AtkText</link> and  <link linkend="AtkValue">AtkValue</link>.</para>
</refsect1>





<refsect1 id="AtkNoOpObject.description" role="desc">
<title role="desc.title">Description</title>
<para>
An AtkNoOpObject is an AtkObject which purports to implement all ATK
interfaces. It is the type of AtkObject which is created if an accessible
object is requested for an object type for which no factory type is specified.
</para>
</refsect1>

<refsect1 id="AtkNoOpObject.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AtkNoOpObject-struct" role="struct">
<title>AtkNoOpObject</title>
<indexterm zone="AtkNoOpObject-struct"><primary sortas="AtkNoOpObject">AtkNoOpObject</primary></indexterm><programlisting>typedef struct _AtkNoOpObject AtkNoOpObject;</programlisting>
<para>
The AtkNoOpObject structure should not be accessed directly.
</para></refsect2>
<refsect2 id="atk-no-op-object-new" role="function">
<title>atk_no_op_object_new ()</title>
<indexterm zone="atk-no-op-object-new"><primary sortas="atk_no_op_object_new">atk_no_op_object_new</primary></indexterm><programlisting><link linkend="AtkObject">AtkObject</link> *         atk_no_op_object_new                (<link linkend="GObject">GObject</link> *obj);</programlisting>
<para>
Provides a default (non-functioning stub) <link linkend="AtkObject"><type>AtkObject</type></link>.
Application maintainers should not use this method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a default (non-functioning stub) <link linkend="AtkObject"><type>AtkObject</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
