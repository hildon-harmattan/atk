<refentry id="AtkDocument">
<refmeta>
<refentrytitle role="top_of_page" id="AtkDocument.top_of_page">AtkDocument</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>ATK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AtkDocument</refname>
<refpurpose>The ATK interface which represents the toplevel container for document content.</refpurpose>
</refnamediv>

<refsynopsisdiv id="AtkDocument.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="AtkDocument-struct">AtkDocument</link>;
const <link linkend="gchar">gchar</link>*        <link linkend="atk-document-get-document-type">atk_document_get_document_type</link>      (<link linkend="AtkDocument">AtkDocument</link> *document);
<link linkend="gpointer">gpointer</link>            <link linkend="atk-document-get-document">atk_document_get_document</link>           (<link linkend="AtkDocument">AtkDocument</link> *document);
const <link linkend="gchar">gchar</link>*        <link linkend="atk-document-get-attribute-value">atk_document_get_attribute_value</link>    (<link linkend="AtkDocument">AtkDocument</link> *document,
                                                         const <link linkend="gchar">gchar</link> *attribute_name);
<link linkend="gboolean">gboolean</link>            <link linkend="atk-document-set-attribute-value">atk_document_set_attribute_value</link>    (<link linkend="AtkDocument">AtkDocument</link> *document,
                                                         const <link linkend="gchar">gchar</link> *attribute_name,
                                                         const <link linkend="gchar">gchar</link> *attribute_value);
<link linkend="AtkAttributeSet">AtkAttributeSet</link>*    <link linkend="atk-document-get-attributes">atk_document_get_attributes</link>         (<link linkend="AtkDocument">AtkDocument</link> *document);
const <link linkend="gchar">gchar</link>*        <link linkend="atk-document-get-locale">atk_document_get_locale</link>             (<link linkend="AtkDocument">AtkDocument</link> *document);
</synopsis>
</refsynopsisdiv>

<refsect1 id="AtkDocument.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----AtkDocument
</synopsis>
</refsect1>




<refsect1 id="AtkDocument.implementations" role="implementations">
<title role="implementations.title">Known Implementations</title>
<para>
AtkDocument is implemented by
 <link linkend="AtkNoOpObject">AtkNoOpObject</link>.</para>
</refsect1>


<refsect1 id="AtkDocument.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="AtkDocument-load-complete">load-complete</link>&quot;                                  : Run Last
  &quot;<link linkend="AtkDocument-load-stopped">load-stopped</link>&quot;                                   : Run Last
  &quot;<link linkend="AtkDocument-reload">reload</link>&quot;                                         : Run Last
</synopsis>
</refsect1>


<refsect1 id="AtkDocument.description" role="desc">
<title role="desc.title">Description</title>
<para>
The AtkDocument interface should be supported by any object whose content is a
representation or view of a document.  The AtkDocument interface should appear
on the toplevel container for the document content; however AtkDocument
instances may be nested (i.e. an AtkDocument may be a descendant of another
AtkDocument) in those cases where one document contains "embedded content"
which can reasonably be considered a document in its own right.
</para>
</refsect1>

<refsect1 id="AtkDocument.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AtkDocument-struct" role="struct">
<title>AtkDocument</title>
<indexterm zone="AtkDocument-struct"><primary sortas="AtkDocument">AtkDocument</primary></indexterm><programlisting>typedef struct _AtkDocument AtkDocument;</programlisting>
<para>
The AtkDocument structure does not contain any fields.
</para></refsect2>
<refsect2 id="atk-document-get-document-type" role="function">
<title>atk_document_get_document_type ()</title>
<indexterm zone="atk-document-get-document-type"><primary sortas="atk_document_get_document_type">atk_document_get_document_type</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        atk_document_get_document_type      (<link linkend="AtkDocument">AtkDocument</link> *document);</programlisting>
<para>
Gets a string indicating the document type.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> instance that implements AtkDocumentIface
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a string indicating the document type
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="atk-document-get-document" role="function">
<title>atk_document_get_document ()</title>
<indexterm zone="atk-document-get-document"><primary sortas="atk_document_get_document">atk_document_get_document</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>            atk_document_get_document           (<link linkend="AtkDocument">AtkDocument</link> *document);</programlisting>
<para>
Gets a <link linkend="gpointer"><literal>gpointer</literal></link> that points to an instance of the DOM.  It is
up to the caller to check atk_document_get_type to determine
how to cast this pointer.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> instance that implements AtkDocumentIface
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="gpointer"><literal>gpointer</literal></link> that points to an instance of the DOM.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="atk-document-get-attribute-value" role="function" condition="since:1.12">
<title>atk_document_get_attribute_value ()</title>
<indexterm zone="atk-document-get-attribute-value" role="1.12"><primary sortas="atk_document_get_attribute_value">atk_document_get_attribute_value</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        atk_document_get_attribute_value    (<link linkend="AtkDocument">AtkDocument</link> *document,
                                                         const <link linkend="gchar">gchar</link> *attribute_name);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> instance that implements AtkDocumentIface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attribute_name</parameter>&#160;:</term>
<listitem><simpara> a character string representing the name of the attribute
           whose value is being queried.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a string value associated with the named attribute for this
   document, or NULL if a value for <link linkend="attribute-name"><type>attribute_name</type></link> has not been specified
   for this document.
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 1.12</para></refsect2>
<refsect2 id="atk-document-set-attribute-value" role="function" condition="since:1.12">
<title>atk_document_set_attribute_value ()</title>
<indexterm zone="atk-document-set-attribute-value" role="1.12"><primary sortas="atk_document_set_attribute_value">atk_document_set_attribute_value</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            atk_document_set_attribute_value    (<link linkend="AtkDocument">AtkDocument</link> *document,
                                                         const <link linkend="gchar">gchar</link> *attribute_name,
                                                         const <link linkend="gchar">gchar</link> *attribute_value);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> instance that implements AtkDocumentIface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attribute_name</parameter>&#160;:</term>
<listitem><simpara> a character string representing the name of the attribute
           whose value is being set.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attribute_value</parameter>&#160;:</term>
<listitem><simpara> a string value to be associated with <link linkend="attribute-name"><type>attribute_name</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if <link linkend="value"><type>value</type></link> is successfully associated with <link linkend="attribute-name"><type>attribute_name</type></link>
         for this document, FALSE otherwise (e.g. if the document does not
         allow the attribute to be modified).
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 1.12</para></refsect2>
<refsect2 id="atk-document-get-attributes" role="function" condition="since:1.12">
<title>atk_document_get_attributes ()</title>
<indexterm zone="atk-document-get-attributes" role="1.12"><primary sortas="atk_document_get_attributes">atk_document_get_attributes</primary></indexterm><programlisting><link linkend="AtkAttributeSet">AtkAttributeSet</link>*    atk_document_get_attributes         (<link linkend="AtkDocument">AtkDocument</link> *document);</programlisting>
<para>
Gets an AtkAttributeSet which describes document-wide
         attributes as name-value pairs.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> instance that implements AtkDocumentIface
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> An AtkAttributeSet containing the explicitly
         set name-value-pair attributes associated with this document
         as a whole.
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 1.12</para></refsect2>
<refsect2 id="atk-document-get-locale" role="function">
<title>atk_document_get_locale ()</title>
<indexterm zone="atk-document-get-locale"><primary sortas="atk_document_get_locale">atk_document_get_locale</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        atk_document_get_locale             (<link linkend="AtkDocument">AtkDocument</link> *document);</programlisting>
<para>
Gets a UTF-8 string indicating the POSIX-style LC_MESSAGES locale
         of the content of this document instance.  Individual
         text substrings or images within this document may have
         a different locale, see atk_text_get_attributes and
         atk_image_get_image_locale.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> instance that implements AtkDocumentIface
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a UTF-8 string indicating the POSIX-style LC_MESSAGES
         locale of the document content as a whole, or NULL if
         the document content does not specify a locale.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 id="AtkDocument.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="AtkDocument-load-complete" role="signal"><title>The <literal>&quot;load-complete&quot;</literal> signal</title>
<indexterm zone="AtkDocument-load-complete"><primary sortas="AtkDocument::load-complete">AtkDocument::load-complete</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="AtkDocument">AtkDocument</link> *atkdocument,
                                                        <link linkend="gpointer">gpointer</link>     user_data)        : Run Last</programlisting>
<para>
The 'load-complete' signal is emitted when a pending load of a static
document has completed.  This signal is to be expected by ATK clients
if and when AtkDocument implementors expose ATK_STATE_BUSY.  If the state
of an AtkObject which implements AtkDocument does not include ATK_STATE_BUSY,
it should be safe for clients to assume that the AtkDocument's static contents
are fully loaded into the container.  (Dynamic document contents should
be exposed via other signals.)
</para><variablelist role="params">
<varlistentry><term><parameter>atkdocument</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="AtkDocument-load-stopped" role="signal"><title>The <literal>&quot;load-stopped&quot;</literal> signal</title>
<indexterm zone="AtkDocument-load-stopped"><primary sortas="AtkDocument::load-stopped">AtkDocument::load-stopped</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="AtkDocument">AtkDocument</link> *atkdocument,
                                                        <link linkend="gpointer">gpointer</link>     user_data)        : Run Last</programlisting>
<para>
The 'load-stopped' signal is emitted when a pending load of document contents
is cancelled, paused, or otherwise interrupted by the user or application
logic.  It should not however be
emitted while waiting for a resource (for instance while blocking on a file or
network read) unless a user-significant timeout has occurred.
</para><variablelist role="params">
<varlistentry><term><parameter>atkdocument</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="AtkDocument-reload" role="signal"><title>The <literal>&quot;reload&quot;</literal> signal</title>
<indexterm zone="AtkDocument-reload"><primary sortas="AtkDocument::reload">AtkDocument::reload</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="AtkDocument">AtkDocument</link> *atkdocument,
                                                        <link linkend="gpointer">gpointer</link>     user_data)        : Run Last</programlisting>
<para>
The 'reload' signal is emitted when the contents of a document is refreshed
from its source.  Once 'reload' has been emitted, a matching 'load-complete'
or 'load-stopped' signal should follow, which clients may await before
interrogating ATK for the latest document content.
</para><variablelist role="params">
<varlistentry><term><parameter>atkdocument</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
